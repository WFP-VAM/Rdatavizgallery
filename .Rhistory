library(labelled)
library(expss)
library(haven)
#library(devtools)
#install_github("WFP-VAM/wfpthemes")
library(wfpthemes)
#load data set
data <- haven::read_sav("data/sampledataenglish.sav")
#calculate FCS & FCG
#calculate FCS
data <- data %>% mutate(FCS = (2 * FCSStap) +(3 * FCSPulse) +(4*FCSPr) +(4*FCSDairy) +FCSVeg  +FCSFruit +(0.5*FCSFat) +(0.5*FCSSugar))
var_label(data$FCS) <- "Food Consumption Score"
#create FCG groups based on 21/25 or 28/42 thresholds
#Use this when analyzing a country with low consumption of sugar and oil - thresholds 21-35
data <- data %>% mutate(FCSCat21 = case_when(
FCS <= 21 ~ 1, between(FCS, 21.5, 35) ~ 2, FCS > 35 ~ 3))
val_lab(data$FCSCat21) = num_lab("
1 Poor
2 Borderline
3 Acceptable
")
var_label(data$FCSCat21) <- "FCS Categories"
#make table of FCG by admin1
fcscat21_admin1_table_long <- data %>%
group_by(ADMIN1Name = to_factor(ADMIN1Name)) %>%
count(FCSCat21 = as.character(FCSCat21)) %>%
mutate(perc = 100 * n / sum(n)) %>%
ungroup() %>% select(-n) %>% mutate_if(is.numeric, round, 1)
#add fcg_colors
fcg_colors = c("Acceptable" = "#27AE60","Borderline" = "#F1C40F","Poor" = "#C0392B")
main_white <- "#000000"
main_black <- "#FFFFFF"
fcscat21_barplot <- fcscat21_admin1_table_long %>%
ggplot() +geom_col(aes(x = ADMIN1Name, y = perc,fill = FCSCat21), width = 0.7) +geom_text(aes(x = ADMIN1Name,
y = perc,
color = FCSCat21,
label = perc),
position = position_stack(vjust = 0.5),
show.legend = FALSE,
size = 10/.pt,
)+ scale_color_manual(values = c(main_white, main_black, main_white)) +
labs(
title = "Household Food Consumption Score Classification by State | 2022",
subtitle = "Relative Proportion of Households per FCS Classification by State",
caption = "Source: WFP VAM Unit \n© United Nations World Food Programme"
)  +  scale_fill_manual(values=fcg_colors) + theme_wfp(grid = "XY",
axis = FALSE,
axis_title = FALSE)
fcscat21_barplot
fcscat21_barplot <- fcscat21_admin1_table_long %>%
ggplot() +geom_col(aes(x = ADMIN1Name, y = perc,fill = FCSCat21), width = 0.7) +geom_text(aes(x = ADMIN1Name,
y = perc,
color = FCSCat21,
label = perc),
position = position_stack(vjust = 0.5),
show.legend = FALSE,
size = 10/.pt,
)+ scale_color_manual(values = c(main_white, main_black, main_white)) +
labs(
title = "Household Food Consumption Score Classification by State | 2022",
subtitle = "Relative Proportion of Households per FCS Classification by State",
caption = "Source: WFP VAM Unit \n© United Nations World Food Programme"
)  +  scale_fill_manual(values=fcg_colors) + theme_wfp(grid = "XY",
axis = T,
axis_title = T)
fcscat21_barplot
fcscat21_barplot <- fcscat21_admin1_table_long %>%
ggplot() +geom_col(aes(x = ADMIN1Name, y = perc,fill = FCSCat21), width = 0.7) +geom_text(aes(x = ADMIN1Name,
y = perc,
color = FCSCat21,
label = perc),
position = position_stack(vjust = 0.5),
show.legend = FALSE,
size = 10/.pt,
)+ scale_color_manual(values = c(main_white, main_black, main_white)) +
labs(
title = "Household Food Consumption Score Classification by State | 2022",
subtitle = "Relative Proportion of Households per FCS Classification by State",
caption = "Source: WFP VAM Unit \n© United Nations World Food Programme"
)  +  scale_fill_manual(values=fcg_colors) + theme_wfp(grid = "XY",
axis = FALSE,
axis_title = FALSE)
fcscat21_barplot
fcscat21_barplot <- fcscat21_admin1_table_long %>%
ggplot() +geom_col(aes(x = ADMIN1Name, y = perc,fill = FCSCat21), width = 0.7) +geom_text(aes(x = ADMIN1Name,
y = perc,
color = FCSCat21,
label = perc),
position = position_stack(vjust = 0.5),
show.legend = FALSE,
size = 10/.pt,
)+ scale_color_manual(values = c(main_white, main_black, main_white)) +
labs(
title = "Household Food Consumption Score Classification by State | 2022",
subtitle = "Relative Proportion of Households per FCS Classification by State",
caption = "Source: WFP VAM Unit \n© United Nations World Food Programme"
)  +  scale_fill_manual(values=fcg_colors) + theme_wfp(grid = "XY",
axis = T,
axis_title = T)
library(officer)
#Export as editable ppt
#copied from https://www.pipinghotdata.com/posts/2020-09-22-exporting-editable-ggplot-graphics-to-powerpoint-with-officer-and-purrr/
#create list of all the plots
listofplots <- list(fcscat21_barplot)
#create_dml, converts the ggplot objects to dml objects.
create_dml <- function(plot){
rvg::dml(ggobj = plot)
}
#Apply this function to the list of ggplot objects to create a list of dml objects with the same dimension.
plots_dml <- purrr::map(listofplots, create_dml)
# function to export plot to PowerPoint ----
create_pptx <- function(plot, path, left = 0.5, top = 0.5, width = 9, height = 7){
# if file does not yet exist, create new PowerPoint ----
if (!file.exists(path)) {
out <- officer::read_pptx()
}
# if file exist, append slides to exisiting file ----
else {
out <- officer::read_pptx(path)
}
out %>%
officer::add_slide() %>%
officer::ph_with(plot, location = officer::ph_location(
width = width, height = height, left = left, top = top)) %>%
base::print(target = path)
}
##now fire away!
purrr::map(
# dml plots to export ----
plots_dml,
# exporting function ----
create_pptx,
# additional fixed arguments in create_pptx ----
path = "FCS_ADM1graphics.pptx"
)
?wfptheme()
library(tidyverse)
library(labelled)
library(expss)
library(haven)
library(officer)
library(devtools)
install_github("WFP-VAM/wfpthemes")
library(wfpthemes)
display_wfp_all()
#load data set
data <- haven::read_sav("data/sampledataenglish.sav")
#calculate FCS & FCG
#calculate FCS
data <- data %>% mutate(FCS = (2 * FCSStap) +(3 * FCSPulse) +(4*FCSPr) +(4*FCSDairy) +FCSVeg  +FCSFruit +(0.5*FCSFat) +(0.5*FCSSugar))
var_label(data$FCS) <- "Food Consumption Score"
#create FCG groups based on 21/25 or 28/42 thresholds
#Use this when analyzing a country with low consumption of sugar and oil - thresholds 21-35
data <- data %>% mutate(FCSCat21 = case_when(
FCS <= 21 ~ 1, between(FCS, 21.5, 35) ~ 2, FCS > 35 ~ 3))
val_lab(data$FCSCat21) = num_lab("
1 Poor
2 Borderline
3 Acceptable
")
var_label(data$FCSCat21) <- "FCS Categories"
#make table of FCG by admin1
fcscat21_admin1_table_long <- data %>%
group_by(ADMIN1Name = to_factor(ADMIN1Name)) %>%
count(FCSCat21 = as.character(FCSCat21)) %>%
mutate(perc = 100 * n / sum(n)) %>%
ungroup() %>% select(-n) %>% mutate_if(is.numeric, round, 1)
fcscat21_barplot_ugz <- fcscat21_admin1_table_long %>%
ggplot() +geom_col(aes(x = ADMIN1Name, y = perc,fill = FCSCat21), width = 0.7) +geom_text(aes(x = ADMIN1Name,
y = perc,
color = FCSCat21,
label = perc),
position = position_stack(vjust = 0.5),
show.legend = FALSE,
size = 10/.pt,
)+ scale_color_manual(values = c(main_white, main_black, main_white)) +
labs(
title = "Household Food Consumption Score Classification by State | 2022",
subtitle = "Relative Proportion of Households per FCS Classification by State",
caption = "Source: WFP VAM Unit \n© United Nations World Food Programme"
)  +  scale_fill_wfp_b(palette = "pal_stoplight_4pt") + theme_wfp(grid = "XY",
axis = FALSE,
axis_title = FALSE)
fcscat21_barplot_ugz
fcscat21_barplot_ugz <- fcscat21_admin1_table_long %>%
ggplot() +geom_col(aes(x = ADMIN1Name, y = perc,fill = FCSCat21), width = 0.7) +geom_text(aes(x = ADMIN1Name,
y = perc,
color = FCSCat21,
label = perc),
position = position_stack(vjust = 0.5),
show.legend = FALSE,
size = 10/.pt,
)+ scale_color_manual(values = c(main_white, main_black, main_white)) +
labs(
title = "Household Food Consumption Score Classification by State | 2022",
subtitle = "Relative Proportion of Households per FCS Classification by State",
caption = "Source: WFP VAM Unit \n© United Nations World Food Programme"
)  +  scale_fill_wfp_b(palette = "pal_stoplight_3pt") + theme_wfp(grid = "XY",
axis = FALSE,
axis_title = FALSE)
fcscat21_barplot_ugz <- fcscat21_admin1_table_long %>%
ggplot() +geom_col(aes(x = ADMIN1Name, y = perc,fill = FCSCat21), width = 0.7) +geom_text(aes(x = ADMIN1Name,
y = perc,
color = FCSCat21,
label = perc),
position = position_stack(vjust = 0.5),
show.legend = FALSE,
size = 10/.pt,
)+ scale_color_manual(values = c(main_white, main_black, main_white)) +
labs(
title = "Household Food Consumption Score Classification by State | 2022",
subtitle = "Relative Proportion of Households per FCS Classification by State",
caption = "Source: WFP VAM Unit \n© United Nations World Food Programme"
)  +  scale_fill_wfp_b(palette = "pal_stoplight_3pt") + theme_wfp(grid = "XY",
axis = FALSE,
axis_title = FALSE)
fcscat21_barplot_ugz
#load data set
data <- haven::read_sav("data/sampledataenglish.sav")
#calculate FCS & FCG
#calculate FCS
data <- data %>% mutate(FCS = (2 * FCSStap) +(3 * FCSPulse) +(4*FCSPr) +(4*FCSDairy) +FCSVeg  +FCSFruit +(0.5*FCSFat) +(0.5*FCSSugar))
var_label(data$FCS) <- "Food Consumption Score"
#create FCG groups based on 21/25 or 28/42 thresholds
#Use this when analyzing a country with low consumption of sugar and oil - thresholds 21-35
data <- data %>% mutate(FCSCat21 = case_when(
FCS <= 21 ~ 1, between(FCS, 21.5, 35) ~ 2, FCS > 35 ~ 3))
val_lab(data$FCSCat21) = num_lab("
1 Poor
2 Borderline
3 Acceptable
")
var_label(data$FCSCat21) <- "FCS Categories"
#make table of FCG by admin1
fcscat21_admin1_table_long <- data %>%
group_by(ADMIN1Name = to_factor(ADMIN1Name)) %>%
count(FCSCat21 = as.character(FCSCat21)) %>%
mutate(perc = 100 * n / sum(n)) %>%
ungroup() %>% select(-n) %>% mutate_if(is.numeric, round, 1)
fcscat21_barplot_ugz <- fcscat21_admin1_table_long %>%
ggplot() +geom_col(aes(x = ADMIN1Name, y = perc,fill = FCSCat21), width = 0.7) +geom_text(aes(x = ADMIN1Name,
y = perc,
color = FCSCat21,
label = perc),
position = position_stack(vjust = 0.5),
show.legend = FALSE,
size = 10/.pt,
)+ scale_color_manual(values = c(main_white, main_black, main_white)) +
labs(
title = "Household Food Consumption Score Classification by State | 2022",
subtitle = "Relative Proportion of Households per FCS Classification by State",
caption = "Source: WFP VAM Unit \n© United Nations World Food Programme"
)  +  scale_fill_wfp_b(palette = "pal_stoplight_3pt") + theme_wfp(grid = "XY",
axis = FALSE,
axis_title = FALSE)
library(tidyverse)
library(labelled)
library(expss)
library(haven)
library(officer)
library(devtools)
install_github("WFP-VAM/wfpthemes")
library(wfpthemes)
library(tidyverse)
library(labelled)
library(expss)
library(haven)
library(officer)
#wfp themes package will be updated frequently - so its good to reinstall it everytime for now
library(devtools)
install_github("WFP-VAM/wfpthemes")
library(wfpthemes)
#load sample data set
data <- haven::read_sav("data/sampledataenglish.sav")
#calculate FCS & FCG
#calculate FCS
data <- data %>% mutate(FCS = (2 * FCSStap) +(3 * FCSPulse) +(4*FCSPr) +(4*FCSDairy) +FCSVeg  +FCSFruit +(0.5*FCSFat) +(0.5*FCSSugar))
var_label(data$FCS) <- "Food Consumption Score"
#create FCG groups based on 21/25 or 28/42 thresholds
#Use this when analyzing a country with low consumption of sugar and oil - thresholds 21-35
data <- data %>% mutate(FCSCat21 = case_when(
FCS <= 21 ~ 1, between(FCS, 21.5, 35) ~ 2, FCS > 35 ~ 3))
val_lab(data$FCSCat21) = num_lab("
1 Poor
2 Borderline
3 Acceptable
")
var_label(data$FCSCat21) <- "FCS Categories"
#make table of FCG by admin1
fcscat21_admin1_table_long <- data %>%
group_by(ADMIN1Name = to_factor(ADMIN1Name)) %>%
count(FCSCat21 = as.character(FCSCat21)) %>%
mutate(perc = 100 * n / sum(n)) %>%
ungroup() %>% select(-n) %>% mutate_if(is.numeric, round, 1)
#make plot
fcscat21_barplot <- fcscat21_admin1_table_long %>%
ggplot() +geom_col(aes(x = ADMIN1Name, y = perc,fill = FCSCat21), width = 0.7) +geom_text(aes(x = ADMIN1Name,
y = perc,
color = FCSCat21,
label = perc),
position = position_stack(vjust = 0.5),
show.legend = FALSE,
size = 10/.pt,
)+ scale_color_manual(values = c(main_white, main_black, main_white)) +
labs(
title = "Household Food Consumption Score Classification by State | April 2023",
subtitle = "Relative Proportion of Households per FCS Classification by State in Fake Country",
caption = "Source: Emergency Food Security Assessment, data collected April 2023"
)  +  scale_fill_wfp_b(palette = "pal_stoplight_3pt") + theme_wfp(grid = "XY",
axis = FALSE,
axis_title = FALSE)
fcscat21_barplot
library(tidyverse)
library(labelled)
library(expss)
library(haven)
library(officer)
#wfp themes package will be updated frequently - so its good to reinstall it everytime for now
library(devtools)
install_github("WFP-VAM/wfpthemes")
library(wfpthemes)
#load sample data set
data <- haven::read_sav("data/sampledataenglish.sav")
str(data)
name(data)
names(data)
library(tidyverse)
library(labelled)
library(expss)
library(haven)
library(officer)
#wfp themes package will be updated frequently - so its good to reinstall it everytime for now
library(devtools)
install_github("WFP-VAM/wfpthemes")
library(wfpthemes)
#load sample data set
data <- haven::read_sav("data/sampledataenglish.sav")
#calculate rCSI - script copied and pasted from https://github.com/WFP-VAM/RAMResourcesScripts/blob/main/Indicators/Reduced-coping-strategy-index/rCSI_tidyverse.R
#calculate reduced Coping Strategy Index (rCSI)
data <- data %>% mutate(rCSI = rCSILessQlty + (2 * rCSIBorrow) + rCSIMealNb + rCSIMealSize + (3 * rCSIMealAdult))
var_label(data$rCSI) <- "Reduced coping strategies index (rCSI)"
#creates a table of the mean of rCSI
#providing two options - weighted and unweighted
#unweighted
rCSI_table_mean <- data %>%
drop_na(rCSI) %>%
summarise(meanrCSI = mean(rCSI))
#unweighted mean rCSI by ADM1
rCSI_table_mean <- data %>% group_by(ADMIN1Name)
drop_na(rCSI) %>%
summarise(meanrCSI = mean(rCSI))
library(tidyverse)
library(labelled)
library(expss)
library(haven)
library(officer)
#wfp themes package will be updated frequently - so its good to reinstall it everytime for now
library(devtools)
install_github("WFP-VAM/wfpthemes")
library(wfpthemes)
#load sample data set
data <- haven::read_sav("data/sampledataenglish.sav")
#calculate rCSI - script copied and pasted from https://github.com/WFP-VAM/RAMResourcesScripts/blob/main/Indicators/Reduced-coping-strategy-index/rCSI_tidyverse.R
#calculate reduced Coping Strategy Index (rCSI)
data <- data %>% mutate(rCSI = rCSILessQlty + (2 * rCSIBorrow) + rCSIMealNb + rCSIMealSize + (3 * rCSIMealAdult))
var_label(data$rCSI) <- "Reduced coping strategies index (rCSI)"
#creates a table of the unweighted mean of rCSI
#unweighted mean rCSI by ADM1
rCSI_table_mean <- data %>% group_by(ADMIN1Name)
drop_na(rCSI) %>%
summarise(meanrCSI = mean(rCSI))
library(tidyverse)
library(labelled)
library(expss)
library(haven)
library(officer)
#wfp themes package will be updated frequently - so its good to reinstall it everytime for now
library(devtools)
install_github("WFP-VAM/wfpthemes")
library(wfpthemes)
#load sample data set
data <- haven::read_sav("data/sampledataenglish.sav")
#calculate rCSI - script copied and pasted from https://github.com/WFP-VAM/RAMResourcesScripts/blob/main/Indicators/Reduced-coping-strategy-index/rCSI_tidyverse.R
#calculate reduced Coping Strategy Index (rCSI)
data <- data %>% mutate(rCSI = rCSILessQlty + (2 * rCSIBorrow) + rCSIMealNb + rCSIMealSize + (3 * rCSIMealAdult))
var_label(data$rCSI) <- "Reduced coping strategies index (rCSI)"
#creates a table of the unweighted mean of rCSI
str(data$rCSI)
#unweighted mean rCSI by ADM1
rCSI_table_mean <- data %>% group_by(ADMIN1Name) %>%
drop_na(rCSI) %>%
summarise(meanrCSI = mean(rCSI))
library(tidyverse)
library(labelled)
library(expss)
library(haven)
library(officer)
#wfp themes package will be updated frequently - so its good to reinstall it everytime for now
library(devtools)
install_github("WFP-VAM/wfpthemes")
library(wfpthemes)
#load sample data set
data <- haven::read_sav("data/sampledataenglish.sav")
#calculate rCSI - script copied and pasted from https://github.com/WFP-VAM/RAMResourcesScripts/blob/main/Indicators/Reduced-coping-strategy-index/rCSI_tidyverse.R
#calculate reduced Coping Strategy Index (rCSI)
data <- data %>% mutate(rCSI = rCSILessQlty + (2 * rCSIBorrow) + rCSIMealNb + rCSIMealSize + (3 * rCSIMealAdult))
var_label(data$rCSI) <- "Reduced coping strategies index (rCSI)"
#creates a table of the unweighted mean of rCSI
#unweighted mean rCSI by ADM1
rcsi_admin1_table_long <- data %>% group_by(ADMIN1Name) %>%
drop_na(rCSI) %>%
summarise(meanrCSI = mean(rCSI))
data <- data %>% mutate(FGVitA = FCSDairy +FCSNPrMeatO +FCSNPrEggs +FCSNVegOrg +FCSNVegGre +FCSNFruiOrg)
var_label(data$FGVitA) <- "Consumption of vitamin A-rich foods"
data <- data %>% mutate(FGProtein = FCSPulse +FCSDairy +FCSNPrMeatF +FCSNPrMeatO +FCSNPrFish +FCSNPrEggs)
var_label(data$FGProtein) <- "Consumption of protein-rich foods"
data <- data %>% mutate(FGHIron = FCSNPrMeatF +FCSNPrMeatO +FCSNPrFish)
var_label(data$FGHIron) <- "Consumption of hem iron-rich foods"
#recode into nutritious groups
data <- data %>% mutate(FGVitACat = case_when(FGVitA == 0 ~ 1, between(FGVitA,1,6) ~ 2, FGVitA >= 7 ~ 3),
FGProteinCat = case_when(FGProtein == 0 ~ 1, between(FGProtein,1,6) ~ 2,  FGProtein >= 7 ~ 3),
FGHIronCat = case_when(FGHIron == 0 ~ 1, between(FGHIron,1,6) ~ 2,  FGHIron >= 7 ~ 3)
)
# define variables labels and properties for FGVitACat FGProteinCat FGHIronCat
data <- data %>%
mutate(across(c(FGVitACat, FGProteinCat, FGHIronCat), ~labelled(., labels = c(
"Never consumed" = 1,
"Consumed sometimes" = 2,
"Consumed at least 7 times" = 3
))))
library(tidyverse)
library(labelled)
library(expss)
library(haven)
library(officer)
#wfp themes package will be updated frequently - so its good to reinstall it everytime for now
library(devtools)
install_github("WFP-VAM/wfpthemes")
library(wfpthemes)
#load sample data set
data <- haven::read_sav("data/sampledataenglish.sav")
#calculate FCSN - script copied and pasted from https://github.com/WFP-VAM/RAMResourcesScripts/blob/main/Indicators/Food-consumption-score-nutrition/FCSN_indicator_tidyverse.R
#assign variable and value labels
#variable labels
var_label(data$Lcs_stress_DomAsset) <- "Sold household assets/goods (radio, furniture, refrigerator, television, jewellery etc.) due to lack of food"
var_label(data$Lcs_stress_Saving) <- "Spent savings due to lack of food"
var_label(data$Lcs_stress_EatOut) <- "Sent household members to eat elsewhere/live with family or friends due to lack of food"
var_label(data$Lcs_stress_CrdtFood) <- "Purchased food/non-food on credit (incur debts) due to lack of food"
var_label(data$Lcs_crisis_ProdAssets) <- "Sold productive assets or means of transport (sewing machine, wheelbarrow, bicycle, car, etc.)  due to lack of food"
var_label(data$Lcs_crisis_Health) <- "Reduced expenses on health (including drugs)"
var_label(data$Lcs_crisis_OutSchool) <- "Withdrew children from school due to lack of food"
var_label(data$Lcs_em_ResAsset) <- "Mortgaged/Sold house or land due to lack of food"
var_label(data$Lcs_em_Begged) <- "Begged and/or scavenged (asked strangers for money/food) due to lack of food"
var_label(data$Lcs_em_IllegalAct) <- "Engaged in illegal income activities (theft, prostitution) due to lack of food"
#value labels
data <- data %>%
mutate(across(c(Lcs_stress_DomAsset,Lcs_stress_Saving,Lcs_stress_EatOut,Lcs_stress_CrdtFood,Lcs_crisis_ProdAssets,Lcs_crisis_Health,Lcs_crisis_OutSchool,Lcs_em_ResAsset,Lcs_em_Begged,Lcs_em_IllegalAct), ~labelled(., labels = c(
"No, because I did not need to" = 10,
"No, because I already sold those assets or have engaged in this activity within the last 12 months and cannot continue to do it" = 20,
"Yes" = 30,
"Not applicable (don’t have access to this strategy)" = 9999
))))
#create a variable to specify if the household used any of the strategies by severity
#stress
data <- data %>% mutate(stress_coping_FS = case_when(
Lcs_stress_DomAsset == 20 |  Lcs_stress_DomAsset == 30 ~ 1,
Lcs_stress_Saving == 20 | Lcs_stress_Saving == 30 ~ 1,
Lcs_stress_EatOut == 20 | Lcs_stress_EatOut == 30 ~ 1,
Lcs_stress_CrdtFood == 20 | Lcs_stress_CrdtFood == 30 ~1,
TRUE ~ 0))
var_label(data$stress_coping_FS) <- "Did the HH engage in stress coping strategies"
#Crisis
data <- data %>% mutate(crisis_coping_FS = case_when(
Lcs_crisis_ProdAssets == 20 |  Lcs_crisis_ProdAssets == 30 ~ 1,
Lcs_crisis_Health == 20 | Lcs_crisis_Health == 30 ~ 1,
Lcs_crisis_OutSchool == 20 | Lcs_crisis_OutSchool == 30 ~ 1,
TRUE ~ 0))
var_label(data$crisis_coping_FS) <- "Did the HH engage in crisis coping strategies"
#Emergency
data <- data %>% mutate(emergency_coping_FS = case_when(
Lcs_em_ResAsset == 20 |  Lcs_em_ResAsset == 30 ~ 1,
Lcs_em_Begged == 20 | Lcs_em_Begged == 30 ~ 1,
Lcs_em_IllegalAct == 20 | Lcs_em_IllegalAct == 30 ~ 1,
TRUE ~ 0))
var_label(data$emergency_coping_FS) <- "Did the HH engage in emergency coping strategies"
#calculate Max_coping_behaviour
data <- data %>% mutate(Max_coping_behaviourFS = case_when(
emergency_coping_FS == 1 ~ 4,
crisis_coping_FS == 1 ~ 3,
stress_coping_FS == 1 ~ 2,
TRUE ~ 1))
var_label(data$Max_coping_behaviourFS) <- "Summary of asset depletion"
val_lab(data$Max_coping_behaviourFS) = num_lab("
1 HH not adopting coping strategies
2 Stress coping strategies
3 Crisis coping strategies
4 Emergencies coping strategies
")
#creates a table of the weighted percentage of Max_coping_behaviourFS by
#creating a temporary variable to display value labels
#and providing the option to use weights if needed
Max_coping_behaviourFS_table_wide <- data %>%
drop_na(Max_coping_behaviourFS) %>%
count(Max_coping_behaviourFS_lab = as.character(Max_coping_behaviourFS)) %>% # if weights are needed use instead the row below
#count(Max_coping_behaviourFS_lab = as.character(Max_coping_behaviourFS), wt = nameofweightvariable)
mutate(Percentage = 100 * n / sum(n)) %>%
ungroup() %>% select(-n) %>%
pivot_wider(names_from = Max_coping_behaviourFS_lab,
values_from = Percentage,
values_fill =  0)
table(data$Max_coping_behaviourFS)
names(data)
